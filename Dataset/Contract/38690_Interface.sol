contract Interface {
	function registerArtwork (address _contract, bytes32 _SHA256Hash, uint256 _editionSize, string _title, string _fileLink, uint256 _ownerCommission, address _artist, bool _indexed, bool _ouroboros);
	function isSHA256HashRegistered (bytes32 _SHA256Hash) returns (bool _registered);			 
	function isFactoryApproved (address _factory) returns (bool _approved);						 
	function issuePatrons (address _to, uint256 _amount);										 
    function approveFactoryContract (address _factoryContractAddress, bool _approved);			 
	function changeOwner (address newOwner);													 
	function offerPieceForSaleByAddress (address _contract, uint256 _price);					 
	function offerPieceForSale (uint256 _price);
	function fillBidByAddress (address _contract);												 
	function fillBid();
	function cancelSaleByAddress (address _contract);											 
	function cancelSale();
	function offerIndexedPieceForSaleByAddress (address _contract, uint256 _index, uint256 _price);				 
	function offerIndexedPieceForSale(uint256 _index, uint256 _price);
	function fillIndexedBidByAddress (address _contract, uint256 _index);						 
	function fillIndexedBid (uint256 _index);
	function cancelIndexedSaleByAddress (address _contract);									 
	function cancelIndexedSale();
    function transferByAddress (address _contract, uint256 _amount, address _to);				 
    function transferIndexedByAddress (address _contract, uint256 _index, address _to);		 
	function approveByAddress (address _contract, address _spender, uint256 _amount);			 
	function approveIndexedByAddress (address _contract, address _spender, uint256 _index);		 
	function burnByAddress (address _contract, uint256 _amount);								 
	function burnFromByAddress (address _contract, uint256 _amount, address _from);				 
	function burnIndexedByAddress (address _contract, uint256 _index);							 
	function burnIndexedFromByAddress (address _contract, address _from, uint256 _index);		 
    function totalSupply() constant returns (uint256 totalSupply);									 
	function balanceOf(address _owner) constant returns (uint256 balance);							 
 	function transfer(address _to, uint256 _value) returns (bool success);							 
 	function transferFrom(address _from, address _to, uint256 _value) returns (bool success);		 
	function approve(address _spender, uint256 _value) returns (bool success);						 
	function allowance(address _owner, address _spender) constant returns (uint256 remaining);		 
	function burn(uint256 _amount) returns (bool success);										 
	function burnFrom(address _from, uint256 _amount) returns (bool success);					 
	function transferIndexed (address _to, uint256 __index) returns (bool success);			 
	function transferFromIndexed (address _from, address _to, uint256 _index) returns (bool success);	 
	function approveIndexed (address _spender, uint256 _index) returns (bool success);			 
	function burnIndexed (uint256 _index);														 
	function burnIndexedFrom (address _owner, uint256 _index);									 
}
